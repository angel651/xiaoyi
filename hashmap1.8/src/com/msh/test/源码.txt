public class HashMap<K,V> extends AbstractMap<K,V>
    implements Map<K,V> Cloneable,Serializable{//实现了两次Map接口，泛型类型推断
    static final float loadFactor;
    final float loadFactor;//装填因子
     public HashMap() {
            this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted
        }

        public HashMap(int initialCapacity){//initialCapacity:10
            this(initialCapacity,DEFAULT_LOAD_FACTOR);
        }

         public HashMap(int initialCapacity, float loadFactor) {//10，0.75
                if (initialCapacity < 0)
                    throw new IllegalArgumentException("Illegal initial capacity: " +
                                                       initialCapacity);
                if (initialCapacity > MAXIMUM_CAPACITY)
                    initialCapacity = MAXIMUM_CAPACITY;
                if (loadFactor <= 0 || Float.isNaN(loadFactor))
                    throw new IllegalArgumentException("Illegal load factor: " +
                                                       loadFactor);
                this.loadFactor = loadFactor;
                this.threshold = tableSizeFor(initialCapacity);
            }

            public V put(K key, V value) {
                 return putVal(hash(key), key, value, false, true);
            }

           static final int tableSizeFor(int cap) {
                int n = cap - 1;
                n |= n >>> 1;
                n |= n >>> 2;
                n |= n >>> 4;
                n |= n >>> 8;
                n |= n >>> 16;
                return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
            }